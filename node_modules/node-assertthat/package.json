{
  "name": "node-assertthat",
  "version": "0.0.18",
  "description": "node-assertthat provides a fluent TDD style for Node.js: assert.that(actual, is.equalTo(expected));",
  "author": {
    "name": "Golo Roden",
    "email": "webmaster@goloroden.de",
    "url": "http://www.goloroden.de"
  },
  "main": "./lib/assert.js",
  "dependencies": {
    "comparejs": "0.0.11"
  },
  "devDependencies": {
    "grunt": "0.4.0",
    "grunt-contrib-jshint": "0.1.1",
    "grunt-contrib-watch": "0.2.0",
    "grunt-mocha-test": "0.2.0"
  },
  "scripts": {
    "test": "mocha"
  },
  "repository": {
    "type": "git",
    "url": "https://github.com/goloroden/node-assertthat"
  },
  "readme": "# node-assertthat\n\nnode-assertthat provides a fluent TDD style for Node.js: `assert.that(actual, is.equalTo(expected));`\n\nIf you have any questions or feedback, feel free to contact me using [@goloroden](https://twitter.com/goloroden) on Twitter.\n\n## Installation\n\n    $ npm install node-assertthat\n\n## Quick Start\n\nUsing node-assertthat is easy. All you need to do is to add a reference to it within your Node.js application:\n\n```javascript\nvar assert = require('node-assertthat');\n```\n\nNow you are able to use the various constraints:\n\n```javascript\nvar add = function(first, second) {\n  return first + second;\n};\n\nvar actual = add(23, 42),\n    expected = 65;\n\nassert.that(actual, is.equalTo(expected));\n```\n\nPlease note that node-assertthat extends Node's assert module, i.e. all the code you have been used to will work with node-assertthat as well.\n\n## Available constraints\n\nPlease note that any constraint can be negated using the `not` keyword.\n\n### is.atLeast\n\nAsserts that `actual` is greater than or equal to `expected`.\n\n```javascript\nassert.that(actual, is.atLeast(expected));\nassert.that(actual, is.not.atLeast(expected));\n```\n\n### is.atMost\n\nAsserts that `actual` is less than or equal to `expected`.\n\n```javascript\nassert.that(actual, is.atMost(expected));\nassert.that(actual, is.not.atMost(expected));\n```\n\n### is.between\n\nAsserts that `actual` is between `expectedLow` and `expectedHigh`.\n\n```javascript\nassert.that(actual, is.between(expectedLow, expectedHigh));\nassert.that(actual, is.not.between(expectedLow, expectedHigh));\n```\n\n### is.equalTo\n\nAsserts that `actual` is equal to `expected`.\n\n```javascript\nassert.that(actual, is.equalTo(expected));\nassert.that(actual, is.not.equalTo(expected));\n```\n\n### is.false\n\nAsserts that `actual` is false.\n\n```javascript\nassert.that(actual, is.false());\nassert.that(actual, is.not.false());\n```\n\n### is.falsy\n\nAsserts that `actual` is falsy.\n\n```javascript\nassert.that(actual, is.falsy());\nassert.that(actual, is.not.falsy());\n```\n\n### is.greaterThan\n\nAsserts that `actual` is greater than `expected`.\n\n```javascript\nassert.that(actual, is.greaterThan(expected));\nassert.that(actual, is.not.greaterThan(expected));\n```\n\n### is.lessThan\n\nAsserts that `actual` is less than `expected`.\n\n```javascript\nassert.that(actual, is.lessThan(expected));\nassert.that(actual, is.not.lessThan(expected));\n```\n\n### is.NaN\n\nAsserts that `actual` is NaN.\n\n```javascript\nassert.that(actual, is.NaN());\nassert.that(actual, is.not.NaN());\n```\n\n### is.null\n\nAsserts that `actual` is null.\n\n```javascript\nassert.that(actual, is.null());\nassert.that(actual, is.not.null());\n```\n\n### is.ofType\n\nAsserts that `actual` is of type `expected`.\n\n```javascript\nassert.that(actual, is.ofType(expected));\nassert.that(actual, is.not.ofType(expected));\n```\n\n### is.sameAs\n\nAsserts that `actual` is identical to `expected`.\n\n```javascript\nassert.that(actual, is.sameAs(expected));\nassert.that(actual, is.not.sameAs(expected));\n```\n\n### is.throwing\n\nAsserts that `f` throws an exception.\n\n```javascript\nassert.that(f, is.throwing());\nassert.that(f, is.not.throwing());\n```\n\nAlternatively, asserts that `f` throws an exception with the `expected` message.\n\n```javascript\nassert.that(f, is.throwing(expected));\nassert.that(f, is.not.throwing(expected));\n```\n\n### is.true\n\nAsserts that `actual` is true.\n\n```javascript\nassert.that(actual, is.true());\nassert.that(actual, is.not.true());\n```\n\n### is.undefined\n\nAsserts that `actual` is undefined.\n\n```javascript\nassert.that(actual, is.undefined());\nassert.that(actual, is.not.undefined());\n```\n\n## Running the tests\n\nnode-assertthat has been developed using TDD. To run the tests, go to the folder where you have installed node-assertthat to and run `npm test`. You need to have [mocha](https://github.com/visionmedia/mocha) installed.\n\n    $ npm test\n\nAdditionally, this module can be built using [Grunt](http://gruntjs.com/). Besides running the tests, Grunt also analyses the code using [JSHint](http://www.jshint.com/). To run Grunt, go to the folder where you have installed node-assertthat and run `grunt`. You need to have [grunt-cli](https://github.com/gruntjs/grunt-cli) installed.\n\n    $ grunt\n\n## License\n\nThe MIT License (MIT)\nCopyright (c) 2011-2012 Golo Roden.\n \nPermission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:\n \nThe above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n \nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.",
  "readmeFilename": "README.md",
  "_id": "node-assertthat@0.0.18",
  "dist": {
    "shasum": "3f1d323d7a1c0e2d533e8985d65e13466f24e0b8"
  },
  "_from": "node-assertthat@",
  "_resolved": "https://registry.npmjs.org/node-assertthat/-/node-assertthat-0.0.18.tgz"
}
